package org.example.database.repositories;

/**
 * Інтерфейс, який визначає основні операції CRUD (створення, читання, оновлення, видалення) для сутностей.
 * Загальний тип T представляє тип сутності, яку управляють.
 *
 * @param <T> Тип сутності, для якої визначені операції CRUD.
 */
public interface Crud<T> {
    /**
     * Зберігає сутність в базі даних.
     *
     * @param entity Сутність, яку потрібно зберегти.
     */
    void persist(T entity);

    /**
     * Отримує сутність з бази даних за її ідентифікатором.
     *
     * @param id Ідентифікатор сутності, яку потрібно отримати.
     * @return Отримана сутність або null, якщо її не знайдено.
     */
    T getById(Object id);

    /**
     * Злиття змін з відокремленої сутності в базу даних.
     *
     * @param entity Сутність, яку потрібно злити.
     */
    void merge(T entity);

    /**
     * Видаляє сутність з бази даних.
     *
     * @param entity Сутність, яку потрібно видалити.
     */
    void remove(T entity);
}